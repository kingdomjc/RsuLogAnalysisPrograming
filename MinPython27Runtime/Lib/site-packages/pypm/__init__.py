# Copyright (c) 2010 ActiveState Software Inc. All rights reserved.

from __future__ import print_function

# X.Y.Z (X.Y is compat version). each compat version separates the local 
# repo index area and other files ... eg: ~/Library/Caches/PyPM/1.1/...
__version_info__ = ('1', '4', '3')
__version__ = '.'.join(__version_info__) # + '.dev'

# Set the default logging level for global module. It is unfortunate that
# logging module has ERROR/WARN only has the default levels. All loggers
# (pypm.**) will inherit this level unless explicitly overrided elsewhere.
import logging
logging.getLogger('pypm').setLevel(logging.DEBUG) # DEBUG and above levels

from os import path
import sys


# Add path to dependent libraries
external_dir = path.abspath(path.join(path.dirname(__file__), 'external'))
external_dir_pyX = path.join(external_dir, '%d' % sys.version_info[0])
assert path.exists(external_dir), 'missing: %s' % external_dir
assert path.exists(external_dir_pyX), 'missing: %s' % external_dir_pyX
sys.path.insert(0, external_dir)
sys.path.insert(0, external_dir_pyX)


# expand six.moves
import pypm.common.backport 


# Convenient function for API use; see ``pypm.client.command.main``
def cmd(argv):
    from pypm.client.command import main
    return main(argv)
